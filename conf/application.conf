include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.agentstatuschange.wiring.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

appName = "agent-status-change"
play.http.router = prod.Routes
play.modules.enabled += "MicroserviceModule"

controllers {

  uk.gov.hmrc.agentstatuschange.controllers.AgentstatuschangeController {
    needsAuditing = true
    needsLogging = true
  }
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }
    des {
      host=localhost
      port=9904 #agent-stubs
      authorization-token=secret
      environment=test
    }

    agent-client-authorisation {
      host = localhost
      port = 9432
    }

    agent-fi-relationship {
      host = localhost
      port = 9427
    }

    agent-mapping {
      host = localhost
      port = 9439
    }

    agent-client-relationships {
      host = localhost
      port = 9434
     }

  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

test.stubbed.status = "Active"

mongodb {
  uri = "mongodb://localhost:27017/agent-status-change"
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

agent-termination {
  username = username
  password = password
}

termination.stride.enrolment = "caat"
